// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PokeWeb;

#nullable disable

namespace PokeWeb.Migrations
{
    [DbContext(typeof(PokeContext))]
    [Migration("20220324145727_tableschema")]
    partial class tableschema
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PokeWeb.Models.DbModel+db_Employee", b =>
                {
                    b.Property<string>("Account")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nick")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Account");

                    b.ToTable("Employee", (string)null);
                });

            modelBuilder.Entity("PokeWeb.Models.DbModel+db_Pokemon", b =>
                {
                    b.Property<string>("No")
                        .HasColumnType("varchar(4)");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatTime")
                        .HasColumnType("datetime");

                    b.Property<string>("EnName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ImgRoute")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("JpName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TwName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Type_1")
                        .HasColumnType("int");

                    b.Property<int>("Type_2")
                        .HasColumnType("int");

                    b.HasKey("No");

                    b.ToTable("Pokemons", (string)null);
                });

            modelBuilder.Entity("PokeWeb.Models.DbModel+db_PokemonType", b =>
                {
                    b.Property<int>("No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("No"), 1L, 1);

                    b.Property<string>("EnName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageIcon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JpName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TwName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("No");

                    b.ToTable("PokemonTypes", (string)null);
                });

            modelBuilder.Entity("PokeWeb.Models.DbModel+db_TypeCompare", b =>
                {
                    b.Property<int>("Type_1")
                        .HasColumnType("int");

                    b.Property<int>("Type_2")
                        .HasColumnType("int");

                    b.Property<decimal>("Damage")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Type_1", "Type_2");

                    b.ToTable("TypeCompare", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
